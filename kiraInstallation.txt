//kuracağımız node için aşağıdaki TCP portlarını açıyoruz

Kaynak: 4vCPU - 8GB RAM - 40 GB Memory

Ubuntu 20.04

22 — Reserved for SSH, allows for remote communication with the host
80 — Allows for http access to KIRA Frontend
9090 — GRPC access to the public sentry
26656 — P2P port allowing public sentry to sync and propagate blocks
26657 — RPC port enabling blockchain state query
36656 — P2P port allowing private sentry to sync and propagate blocks
11000 — INTERX enabling easy blockchain state query & snapshot

//User açıyoruz
sudo adduser kira

//Usere yetki veriyoruz
sudo visudo
root    ALL=(ALL:ALL) ALL 
altına bu satırı ekle 
kira ALL=(ALL:ALL) ALL
CTRL+O enter CTRL+X

//Usere yetki veriyoruz
sudo usermod -a -G sudo kira

//Usere giriyoruz.
sudo su - kira

//komutu çalıştırmak için ssh ekranı olması gerekiyor bunun için aşağıdaki komutu yazıyoruz
sudo -s

//Komutu çalıştırdıktan sonra gelen ekranda sırasıyla( testnet-1 , V yazıyoruz)
cd /tmp && read -p "Input branch name: " BRANCH && \
 wget https://raw.githubusercontent.com/KiraCore/kira/$BRANCH/workstation/init.sh -O ./i.sh && \
 chmod 555 -v ./i.sh && H=$(sha256sum ./i.sh | awk '{ print $1 }') && read -p "Is '$H' a [V]alid SHA256 ?: "$'\n' -n 1 V && \
 [ "${V,,}" == "v" ] && ./i.sh "$BRANCH" || echo "Hash was NOT accepted by the user"
 
 //kurulum sırasında gelen ekranlarda
 
 1. Validator Node seçeneğini seçiyoruz -->2
 2. Quick Setup seçeneğini seçiyoruz -->1
 3. Create [N]ew network or [J]oin existing one: olanda Join seçeneğini seçiyoruz--> J 
 3.1. Gelen ekranda 3.11.224.235
                    18.135.115.225
                    52.56.117.134 IP'lerinden birini seçiyoruz.
 4. Chose to [A]pprove or [R]eject configuration sayfasında Approve seçeneğini seçiyoruz --> A
 5. Yarım saat sonra kurulum tamamlanınca reboot ediyoruz
 
//Açıldıktan sonra sudo  kullanıcıya giriş yapıyoruz
su - kira 
 
//ssh'a geçiyoruz
sudo -s
 
//node'u çalıştırıyoruz node'un çalışmas 5-10 dakika arasında sürüyor
kira

//açılan ekranda 5'e basıyoruz gelen ekrandan aşağıdaki alanı alıp formda yerine yazıyoruz.
Val.ADDR: "VALIDATOR ADDRES" 

Kurulum ve form gönderme işlemi tamamlanmış oluyor.


//Node sync olduktan sonra aşağıdaki 5 ve i ye basıyoruz ve aşağıdaki komutu kendi bilgilerimize göre doldurarak çalıştırıyoruz

sekaid tx customstaking claim-validator-seat --from validator --keyring-backend=test --home=$SEKAID_HOME \
  --moniker="gloreix" \
  --social="https://twitter.com/gkmnktk" \ //--> Twitter adresim
  --website="https://github.com/gokmenkutuk" \ //--> GitHub Adresi verdim ben
  --identity="https://t.me/gkmnktk" \ //--> Telegram adresim
  --chain-id=$NETWORK_NAME --fees=100ukex --yes | jq
  
  
  
  
  //:::::::::::::::::.GÜNCELLEME::::::::::::::::::::::
  sudo -s
  
  cd /tmp && read -p "Input branch name: " BRANCH && \
  wget https://raw.githubusercontent.com/KiraCore/kira/$BRANCH/workstation/init.sh -O ./i.sh && \
  chmod 555 -v ./i.sh && H=$(sha256sum ./i.sh | awk '{ print $1 }') && read -p "Is '$H' a [V]alid SHA256 ?: "$'\n' -n 1 V && \
  [ "${V,,}" == "v" ] && ./i.sh "$BRANCH" || echo "ERROR: Setup failed or was cancelled by the user. Try again init command."

gelen ekranlara sırasıyla; testnet-2 ve V yazdıktan sonra 40. adımdan devam ediyoruz
